<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

  <http pattern="/resources/**" security="none" />
  <http pattern="/js/**" security="none" />
  <http pattern="/css/**" security="none" />
  <http pattern="/plugins/**" security="none" />
  <http pattern="/images/**" security="none" />
  <http pattern="/favicon.ico" security="none" />

  <http pattern="/oauth/check_token" security="none" />
  <http pattern="/login/checkSms" security="none" />

  <mvc:annotation-driven />
  <mvc:default-servlet-handler />

  <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

  <!-- ClientDetailsService configuration -->
  <!-- JDBC client details service, refer to the table oauth_client_details -->
  <beans:bean id="jdbcClientDetailsService"
    class="org.springframework.security.oauth2.provider.client.JdbcClientDetailsService">
    <beans:constructor-arg ref="dataSource" />
  </beans:bean>

  <beans:bean id="clientDetailsUserDetailsService"
    class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
    <beans:constructor-arg ref="jdbcClientDetailsService" />
  </beans:bean>

  <authentication-manager id="oauth2AuthenticationManager">
    <authentication-provider user-service-ref="clientDetailsUserDetailsService" />
  </authentication-manager>

  <!-- client credentials authentication -->
  <beans:bean id="oauth2ClientCredentialsTokenEndpointFilter"
    class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
    <beans:property name="authenticationManager" ref="oauth2AuthenticationManager" />
  </beans:bean>

  <beans:bean id="oauth2AuthenticationEntryPoint"
    class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint" />

  <beans:bean id="oauth2AccessDeniedHandler"
    class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />

  <!-- Endpoint /oauth/token configuration -->
  <http pattern="/oauth/token" create-session="stateless" authentication-manager-ref="oauth2AuthenticationManager"
    entry-point-ref="oauth2AuthenticationEntryPoint" use-expressions="false">
    <intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY" />
    <anonymous enabled="false" />
    <http-basic entry-point-ref="oauth2AuthenticationEntryPoint" />
    <custom-filter ref="oauth2ResourceServerFilter" before="PRE_AUTH_FILTER" />
    <custom-filter ref="oauth2ClientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER" />
    <access-denied-handler error-page="/login/error?code=403" />
    <csrf disabled="true" />
  </http>

  <!-- Token services configuration -->
  <!-- JDBC token store, refer to the table oauth_access_token -->
  <beans:bean id="jdbcTokenStore"
    class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore">
    <beans:constructor-arg ref="dataSource" />
  </beans:bean>

  <beans:bean id="tokenServices"
    class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
    <beans:property name="tokenStore" ref="jdbcTokenStore" />
    <beans:property name="clientDetailsService" ref="jdbcClientDetailsService" />
    <beans:property name="supportRefreshToken" value="true" />
  </beans:bean>

  <beans:bean class="org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory"
    id="oAuth2RequestFactory">
    <beans:constructor-arg name="clientDetailsService" ref="jdbcClientDetailsService" />
  </beans:bean>

  <!-- User approval handler configuration -->
  <beans:bean id="oauth2UserApprovalHandler"
    class="org.springframework.security.oauth2.provider.approval.DefaultUserApprovalHandler" />

  <!-- JDBC approval store, refer to the table oauth_approvals -->
  <beans:bean id="jdbcApprovalStore"
    class="org.springframework.security.oauth2.provider.approval.JdbcApprovalStore">
    <beans:constructor-arg ref="dataSource" />
  </beans:bean>
  <beans:bean id="oauth2ApprovalStoreUserApprovalHandler"
    class="org.springframework.security.oauth2.provider.approval.ApprovalStoreUserApprovalHandler">
    <beans:property name="approvalStore" ref="jdbcApprovalStore" />
    <beans:property name="requestFactory" ref="oAuth2RequestFactory" />
    <beans:property name="clientDetailsService" ref="jdbcClientDetailsService" />
  </beans:bean>

  <!-- JDBC authorization code services, refer to the table oauth_code -->
  <beans:bean id="jdbcAuthorizationCodeServices"
    class="org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices">
    <beans:constructor-arg ref="dataSource" />
  </beans:bean>

  <!-- Authorization server configuration -->
  <oauth2:authorization-server client-details-service-ref="jdbcClientDetailsService"
    token-services-ref="tokenServices" user-approval-handler-ref="oauth2ApprovalStoreUserApprovalHandler"
    error-page="/login/error?code=403" check-token-enabled="true">
    <oauth2:authorization-code
      authorization-code-services-ref="jdbcAuthorizationCodeServices" />
    <oauth2:implicit />
    <oauth2:refresh-token />
    <oauth2:client-credentials />
    <oauth2:password />
  </oauth2:authorization-server>

  <!-- Authentication manager configuration -->
  <authentication-manager id="userAuthenticationManager">
    <authentication-provider>
      <user-service>
        <user name="admin" password="$2a$10$lHsV.TqzNwBXsbyYOjMaXOEj7jUYwaH0kTDzTI1p.u2Fd3.lQRhPi"
          authorities="ROLE_USER" />
      </user-service>
      <password-encoder ref="passwordEncoder" />
    </authentication-provider>
  </authentication-manager>

  <beans:bean id="smsAuthenticationProvider"
    class="com.gmcc.ssoserver.security.sms.SmsAuthenticationProvider">
    <beans:property name="userDetailsService" ref="userDetailsServiceImpl" />
    <beans:property name="hideUserNotFoundExceptions" value="false" />
  </beans:bean>

  <authentication-manager id="smsAuthenticationManager">
    <authentication-provider ref="smsAuthenticationProvider" />
  </authentication-manager>

  <beans:bean id="authenticationEntryPoint"
    class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
    <beans:constructor-arg value="/login" />
    <!-- 
    <beans:property name="useForward" value="true" />
     -->
  </beans:bean>

  <!--
    <beans:bean id="smsAuthenticationFailureHandler" class="com.gmcc.ssoserver.security.sms.SmsAuthenticationFailureHandler">
    <beans:constructor-arg value="/login/error" />
    </beans:bean>
  -->

  <beans:bean id="smsAuthenticationFilter"
    class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
    <!-- 
    <beans:property name="filterProcessesUrl" value="/login/sms" />
     -->
    <beans:property name="usernameParameter" value="mobilePhoneNumber" />
    <beans:property name="passwordParameter" value="smsCode" />
    <beans:property name="authenticationManager" ref="smsAuthenticationManager" />
    <beans:property name="authenticationSuccessHandler">
      <beans:bean
        class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <beans:property name="defaultTargetUrl" value="/index" />
        <!-- 
        <beans:property name="useReferer" value="true" />
         -->
      </beans:bean>
    </beans:property>
    <beans:property name="authenticationFailureHandler">
      <beans:bean
        class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        <beans:property name="defaultFailureUrl" value="/login" />
        <beans:property name="useForward" value="true" />
      </beans:bean>
    </beans:property>
  </beans:bean>

  <http entry-point-ref="authenticationEntryPoint" use-expressions="false">
    <intercept-url pattern="/login/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
    <intercept-url pattern="/oauth/**" access="IS_AUTHENTICATED_FULLY" />
    <intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />
    <custom-filter ref="smsAuthenticationFilter" position="LOGIN_PAGE_FILTER" />
    <logout logout-success-url="/login" logout-url="/logout" />
    <access-denied-handler error-page="/login" />
    <csrf disabled="true" />
  </http>

  <!-- Resource server configuration -->
  <oauth2:resource-server id="oauth2ResourceServerFilter" token-services-ref="tokenServices" />

  <!-- Spring security AccessDecisionManager -->
  <beans:bean id="oauth2AccessDecisionManager"
    class="org.springframework.security.access.vote.UnanimousBased">
    <beans:constructor-arg>
      <beans:list>
        <!--
          <beans:bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
          <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
        -->
        <beans:bean class="org.springframework.security.access.vote.RoleVoter" />
        <beans:bean class="org.springframework.security.web.access.expression.WebExpressionVoter" />
      </beans:list>
    </beans:constructor-arg>
  </beans:bean>
</beans:beans>